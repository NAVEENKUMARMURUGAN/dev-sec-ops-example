name: Good Code Scan

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Semgrep Job with Container
  semgrep:
    name: Semgrep Scan
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Run Semgrep
        if: (github.actor != 'dependabot[bot]')
        run: |
          semgrep ci \
            --json \
            --output semgrep_results.json \
            --include ./sast/fixed_examples \
            --config "p/security-audit" \
            --config "p/owasp-top-ten" \
            --config "p/cwe-top-25"
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
          SEMGREP_TIMEOUT: 300
          SEMGREP_BASELINE_REF: ${{ github.event.pull_request.base.ref || github.event.repository.default_branch }}

      # Upload results for other jobs
      - name: Upload Semgrep Results
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-results
          path: semgrep_results.json

  # Main Security Analysis Job
  bandit:
    name: Bandit Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Code Analysis - Bandit
      - name: Run Bandit
        continue-on-error: true
        run: |
          pip install bandit
          bandit -r ./sast/fixed_examples -ll -f json -o bandit-results.json

      # Upload results for other jobs
      - name: Upload bandit Results
        uses: actions/upload-artifact@v3
        with:
          name: bandit-results
          path: bandit-results.json
